//#;; DO NOT EDIT THIS FILE
/*ENCRYPT_ME*/
////////////////////////////////////////////////////////////////////////////////
//# Copyright (c) 2018 Secantec
//# No Permission to modify and distribute this program
//# even if this copyright message remains unaltered.
//#
//# Author: Secantec 27 April, 2018
//# $Id: $//#
//# Revision History
//#       MM      17  April, 2018    Initial release
//#
////////////////////////////////////////////////////////////////////////////////

// /bin/rm -rf *simv* *csrc* ; perl vpp.pl -perl sntc_berlekamp.1.sv > sntc_berlekamp.1.vpp.sv ; vcs -sverilog -R -debug_all sntc_berlekamp.1.vpp.sv -l sntc_berlekamp.1.vpp.sv.log

 /*ENCRYPT_ME*/

/* verilator lint_off DECLFILENAME */

//`default_nettype none
//`timescale 1 ns / 1 ps


module  sntc_ldpc_encoder_tb #(
// NR_2_0_4/sntc_LDPCparam.sv
parameter MM   = 'h 000a8 ,
// parameter MM =  'h  000a8  , 
parameter NN   = 'h 000d0 ,
// parameter NN =  'h  000d0  , 
parameter cmax = 'h 00017 ,
// parameter cmax =  'h  00017  , 
parameter rmax = 'h 0000a ,
// parameter rmax =  'h  0000a  , 
// 208
// 168
parameter SUM_NN         = $clog2(NN+1), // 8 : nn_width
parameter SUM_MM         = $clog2(MM+1), // 8 : mm_width
parameter LEN            = MM,
parameter SUM_NN_WDTH    = $clog2(SUM_NN+2),
parameter SUM_MM_WDTH    = $clog2(SUM_MM+2),
`include "NR_2_0_4/sntc_LDPC_dec_param.sv"
parameter MAX_SUM_WDTH_LONG = MAX_SUM_WDTH +1,
parameter SUM_LEN= $clog2(NN+1)+1,
parameter HAM_LEN= 16

) (

input wire clk_tb,
input wire rstn_tb

);

`ifdef ENCRYPT
`endif

bit passed =0;
bit [31:0] [150/*int*/:0]  ER;
bit [31:0] [150/*int*/:0]  BG;
bit [31:0] [150/*int*/:0]  KL;
bit [31:0] [150/*int*/:0]    A;
bit [31:0] [150/*int*/:0]    Z;
int par_bits_sent     ;
int par_bits_count    ;
real rate_0 ;
string NR_BG_0;
real rate_1 ;
string NR_BG_1;
real rate_2 ;
string NR_BG_2;
real rate_3 ;
string NR_BG_3;
real rate_4 ;
string NR_BG_4;
real rate_5 ;
string NR_BG_5;
real rate_6 ;
string NR_BG_6;
real rate_7 ;
string NR_BG_7;
real rate_8 ;
string NR_BG_8;
real rate_9 ;
string NR_BG_9;
real rate_10 ;
string NR_BG_10;
real rate_11 ;
string NR_BG_11;
real rate_12 ;
string NR_BG_12;
real rate_13 ;
string NR_BG_13;
real rate_14 ;
string NR_BG_14;
real rate_15 ;
string NR_BG_15;
real rate_16 ;
string NR_BG_16;
real rate_17 ;
string NR_BG_17;
real rate_18 ;
string NR_BG_18;
real rate_19 ;
string NR_BG_19;
real rate_20 ;
string NR_BG_20;
real rate_21 ;
string NR_BG_21;
real rate_22 ;
string NR_BG_22;
real rate_23 ;
string NR_BG_23;
real rate_24 ;
string NR_BG_24;
real rate_25 ;
string NR_BG_25;
real rate_26 ;
string NR_BG_26;
real rate_27 ;
string NR_BG_27;
real rate_28 ;
string NR_BG_28;
real rate_29 ;
string NR_BG_29;
real rate_30 ;
string NR_BG_30;
real rate_31 ;
string NR_BG_31;
real rate_32 ;
string NR_BG_32;
real rate_33 ;
string NR_BG_33;
real rate_34 ;
string NR_BG_34;
real rate_35 ;
string NR_BG_35;
real rate_36 ;
string NR_BG_36;
real rate_37 ;
string NR_BG_37;
real rate_38 ;
string NR_BG_38;
real rate_39 ;
string NR_BG_39;
real rate_40 ;
string NR_BG_40;
real rate_41 ;
string NR_BG_41;
real rate_42 ;
string NR_BG_42;
real rate_43 ;
string NR_BG_43;
real rate_44 ;
string NR_BG_44;
real rate_45 ;
string NR_BG_45;
real rate_46 ;
string NR_BG_46;
real rate_47 ;
string NR_BG_47;
real rate_48 ;
string NR_BG_48;
real rate_49 ;
string NR_BG_49;
real rate_50 ;
string NR_BG_50;
real rate_51 ;
string NR_BG_51;
real rate_52 ;
string NR_BG_52;
real rate_53 ;
string NR_BG_53;
real rate_54 ;
string NR_BG_54;
real rate_55 ;
string NR_BG_55;
real rate_56 ;
string NR_BG_56;
real rate_57 ;
string NR_BG_57;
real rate_58 ;
string NR_BG_58;
real rate_59 ;
string NR_BG_59;
real rate_60 ;
string NR_BG_60;
real rate_61 ;
string NR_BG_61;
real rate_62 ;
string NR_BG_62;
real rate_63 ;
string NR_BG_63;
real rate_64 ;
string NR_BG_64;
real rate_65 ;
string NR_BG_65;
real rate_66 ;
string NR_BG_66;
real rate_67 ;
string NR_BG_67;
real rate_68 ;
string NR_BG_68;
real rate_69 ;
string NR_BG_69;
real rate_70 ;
string NR_BG_70;
real rate_71 ;
string NR_BG_71;
real rate_72 ;
string NR_BG_72;
real rate_73 ;
string NR_BG_73;
real rate_74 ;
string NR_BG_74;
real rate_75 ;
string NR_BG_75;
real rate_76 ;
string NR_BG_76;
real rate_77 ;
string NR_BG_77;
real rate_78 ;
string NR_BG_78;
real rate_79 ;
string NR_BG_79;
real rate_80 ;
string NR_BG_80;
real rate_81 ;
string NR_BG_81;
real rate_82 ;
string NR_BG_82;
real rate_83 ;
string NR_BG_83;
real rate_84 ;
string NR_BG_84;
real rate_85 ;
string NR_BG_85;
real rate_86 ;
string NR_BG_86;
real rate_87 ;
string NR_BG_87;
real rate_88 ;
string NR_BG_88;
real rate_89 ;
string NR_BG_89;
real rate_90 ;
string NR_BG_90;
real rate_91 ;
string NR_BG_91;
real rate_92 ;
string NR_BG_92;
real rate_93 ;
string NR_BG_93;
real rate_94 ;
string NR_BG_94;
real rate_95 ;
string NR_BG_95;
real rate_96 ;
string NR_BG_96;
real rate_97 ;
string NR_BG_97;
real rate_98 ;
string NR_BG_98;
real rate_99 ;
string NR_BG_99;
real rate_100 ;
string NR_BG_100;
real rate_101 ;
string NR_BG_101;
real rate_102 ;
string NR_BG_102;
real rate_103 ;
string NR_BG_103;
real rate_104 ;
string NR_BG_104;
real rate_105 ;
string NR_BG_105;
real rate_106 ;
string NR_BG_106;
real rate_107 ;
string NR_BG_107;
real rate_108 ;
string NR_BG_108;
real rate_109 ;
string NR_BG_109;
real rate_110 ;
string NR_BG_110;
real rate_111 ;
string NR_BG_111;
real rate_112 ;
string NR_BG_112;
real rate_113 ;
string NR_BG_113;
real rate_114 ;
string NR_BG_114;
real rate_115 ;
string NR_BG_115;
real rate_116 ;
string NR_BG_116;
real rate_117 ;
string NR_BG_117;
real rate_118 ;
string NR_BG_118;
real rate_119 ;
string NR_BG_119;
real rate_120 ;
string NR_BG_120;
real rate_121 ;
string NR_BG_121;
real rate_122 ;
string NR_BG_122;
real rate_123 ;
string NR_BG_123;
real rate_124 ;
string NR_BG_124;
real rate_125 ;
string NR_BG_125;
real rate_126 ;
string NR_BG_126;
real rate_127 ;
string NR_BG_127;
real rate_128 ;
string NR_BG_128;
real rate_129 ;
string NR_BG_129;
real rate_130 ;
string NR_BG_130;
real rate_131 ;
string NR_BG_131;
real rate_132 ;
string NR_BG_132;
real rate_133 ;
string NR_BG_133;
real rate_134 ;
string NR_BG_134;
real rate_135 ;
string NR_BG_135;
real rate_136 ;
string NR_BG_136;
real rate_137 ;
string NR_BG_137;
real rate_138 ;
string NR_BG_138;
real rate_139 ;
string NR_BG_139;
real rate_140 ;
string NR_BG_140;
real rate_141 ;
string NR_BG_141;
real rate_142 ;
string NR_BG_142;
real rate_143 ;
string NR_BG_143;
real rate_144 ;
string NR_BG_144;
real rate_145 ;
string NR_BG_145;
real rate_146 ;
string NR_BG_146;
real rate_147 ;
string NR_BG_147;
real rate_148 ;
string NR_BG_148;
real rate_149 ;
string NR_BG_149;



// -1 : shortened
// NR_2_0_4.alist : ALIST name


// spl : NR 2 0 4.alist
// NR_BG: 2

// NR_Z: $NR_Z





wire [NN-1:0]                 final_y_nr_dec;
reg  [NN-1:0]                 q0_0;
reg  [NN-1:0]                 q0_1;
wire [MM-1:0]                 syndrome;
reg  [MM-1:0]                 exp_syn;
wire [SUM_LEN-1:0]            HamDist_sum_mm;
reg  [HAM_LEN-1:0]            HamDist_loop;
reg  [HAM_LEN-1:0]            HamDist_cntr;
reg  [HAM_LEN-1:0]            HamDist_loop_max;
reg  [HAM_LEN-1:0]            HamDist_loop_percentage;
wire [1:0]                    converged;
reg                           start_int;
wire                          valid_int;
reg                           clk;
reg                           rstn;
int                           clk_cntr;
reg                           clr;
reg                           start;
wire                          valid;
wire [31:0]                   percent_probability_int;
real                          percent_probability_real;

reg  [HAM_LEN-1:0]            HamDist_iir1;
reg  [HAM_LEN-1:0]            HamDist_iir2;
reg  [HAM_LEN-1:0]            HamDist_iir3;
reg                           c_test =0;

always_comb begin
          HamDist_iir1 = 85;
          HamDist_iir2 = 15;
          HamDist_iir3 = 5;

end

wire valid_cword_enc;
wire syn_valid_cword_dec;
wire [NN-1:0] y_nr_enc;
reg [NN-MM-1:0] y_nr_in;
reg [NN-1:0] y_nr_w_err;
wire                           converged_loops_ended;
wire                           converged_pass_fail;
int                            num_modified;
int                            err_cnt;

sntc_ldpc_encoder_wrapper i_sntc_ldpc_encoder_wrapper (

                                     .y_nr_in_port(y_nr_in),
                                     .y_nr_enc(y_nr_enc),
                                     .valid_cword_enc(valid_cword_enc),
/* verilator lint_off UNUSED */
                                     .clr(clr),
/* verilator lint_on UNUSED */
                                     .rstn(rstn),
                                     .clk(clk)

);





`ifdef SIMULATION
 int num_pkts =1;
initial
begin
  clk = 0;
  clk_cntr = 1;
  forever
  begin
    clk = ~clk;
    if (clk) clk_cntr = clk_cntr + 1;
    //if (clk) if ((clk_cntr % 1000) === 0) $display("LDPC_TB:clk_cntr:%05d %t", clk_cntr, $time);
    if (clk) $display("LDPC_TB:clk_cntr:%05d %t", clk_cntr, $time);
    #5;
  end
end
initial
begin
  rstn = 0;
  clr = 0;
  repeat (10) @ (posedge clk);
  rstn = 1;
end


always_comb HamDist_loop_max        =  10;
always_comb HamDist_loop_percentage =  110;

initial
begin
  static int timeoutfec;
  static int ret;
  static int decoder_only;
  static int count_msg;
  static int error_count = 0;
  //static int KL[ 50];int BG[50];int ER[50];int A[50];string NR_BG[50];int z;
  static int CLMNS_BG_n        ;
  static int CLMNS_BG_m        ;
  static int CLMNS_BG_n_minus_m;
  static int base_g;
  static int index;


  start                          <= 1'b0;
  decoder_only = 0;
  repeat (1) @ (posedge rstn);
  repeat (10) @ (posedge clk);

  if (c_test) begin


              q0_0  [0] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [0] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [1] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [1] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [2] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [2] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [3] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [3] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [4] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [4] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [5] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [5] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [6] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [6] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [7] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [7] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [8] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [8] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [9] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [9] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [10] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [10] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [11] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [11] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [12] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [12] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [13] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [13] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [14] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [14] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [15] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [15] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [16] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [16] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [17] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [17] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [18] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [18] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [19] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [19] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [20] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [20] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [21] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [21] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [22] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [22] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [23] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [23] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [24] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [24] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [25] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [25] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [26] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [26] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [27] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [27] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [28] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [28] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [29] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [29] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [30] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [30] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [31] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [31] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [32] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [32] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [33] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [33] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [34] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [34] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [35] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [35] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [36] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [36] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [37] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [37] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [38] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [38] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [39] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [39] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [40] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [40] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [41] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [41] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [42] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [42] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [43] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [43] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [44] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [44] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [45] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [45] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [46] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [46] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [47] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [47] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [48] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [48] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [49] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [49] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [50] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [50] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [51] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [51] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [52] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [52] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [53] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [53] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [54] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [54] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [55] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [55] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [56] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [56] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [57] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [57] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [58] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [58] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [59] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [59] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [60] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [60] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [61] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [61] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [62] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [62] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [63] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [63] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [64] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [64] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [65] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [65] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [66] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [66] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [67] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [67] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [68] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [68] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [69] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [69] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [70] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [70] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [71] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [71] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [72] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [72] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [73] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [73] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [74] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [74] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [75] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [75] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [76] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [76] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [77] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [77] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [78] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [78] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [79] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [79] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [80] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [80] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [81] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [81] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [82] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [82] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [83] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [83] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [84] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [84] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [85] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [85] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [86] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [86] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [87] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [87] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [88] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [88] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [89] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [89] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [90] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [90] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [91] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [91] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [92] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [92] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [93] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [93] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [94] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [94] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [95] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [95] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [96] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [96] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [97] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [97] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [98] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [98] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [99] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [99] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [100] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [100] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [101] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [101] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [102] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [102] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [103] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [103] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [104] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [104] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [105] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [105] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [106] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [106] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [107] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [107] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [108] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [108] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [109] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [109] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [110] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [110] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [111] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [111] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [112] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [112] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [113] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [113] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [114] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [114] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [115] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [115] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [116] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [116] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [117] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [117] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [118] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [118] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [119] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [119] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [120] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [120] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [121] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [121] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [122] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [122] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [123] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [123] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [124] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [124] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [125] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [125] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [126] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [126] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [127] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [127] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [128] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [128] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [129] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [129] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [130] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [130] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [131] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [131] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [132] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [132] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [133] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [133] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [134] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [134] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [135] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [135] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [136] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [136] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [137] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [137] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [138] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [138] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [139] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [139] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [140] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [140] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [141] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [141] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [142] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [142] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [143] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [143] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [144] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [144] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [145] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [145] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [146] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [146] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [147] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [147] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [148] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [148] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [149] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [149] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [150] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [150] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [151] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [151] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [152] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [152] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [153] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [153] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [154] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [154] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [155] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [155] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [156] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [156] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [157] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [157] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [158] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [158] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [159] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [159] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [160] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [160] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [161] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [161] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [162] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [162] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [163] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [163] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [164] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [164] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [165] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [165] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [166] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [166] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [167] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [167] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [168] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [168] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [169] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [169] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [170] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [170] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [171] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [171] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [172] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [172] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [173] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [173] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [174] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [174] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [175] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [175] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [176] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [176] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [177] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [177] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [178] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [178] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [179] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [179] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [180] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [180] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [181] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [181] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [182] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [182] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [183] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [183] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [184] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [184] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [185] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [185] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [186] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [186] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [187] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [187] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [188] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [188] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [189] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [189] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [190] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [190] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [191] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [191] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [192] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [192] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [193] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [193] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [194] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [194] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [195] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [195] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [196] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [196] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [197] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [197] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [198] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [198] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [199] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [199] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [200] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [200] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [201] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [201] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [202] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [202] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [203] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [203] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [204] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [204] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [205] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [205] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11
              q0_0  [206] <= 1'b1;  // BPSK 0: 1  === 2'b01
              q0_1  [206] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                 // value of 0 means 1 in BPSK which is 2'b01
              q0_0  [207] <= 1'b1;  // BPSK 1: -1 === 2'b11
              q0_1  [207] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                 // value of 1 means -1 in BPSK which is 2'b11

         exp_syn [0] <= 1'b1;
         exp_syn [1] <= 1'b1;
         exp_syn [2] <= 1'b1;
         exp_syn [3] <= 1'b1;
         exp_syn [4] <= 1'b1;
         exp_syn [5] <= 1'b1;
         exp_syn [6] <= 1'b1;
         exp_syn [7] <= 1'b1;
         exp_syn [8] <= 1'b1;
         exp_syn [9] <= 1'b1;
         exp_syn [10] <= 1'b1;
         exp_syn [11] <= 1'b1;
         exp_syn [12] <= 1'b1;
         exp_syn [13] <= 1'b1;
         exp_syn [14] <= 1'b1;
         exp_syn [15] <= 1'b1;
         exp_syn [16] <= 1'b1;
         exp_syn [17] <= 1'b1;
         exp_syn [18] <= 1'b1;
         exp_syn [19] <= 1'b1;
         exp_syn [20] <= 1'b1;
         exp_syn [21] <= 1'b1;
         exp_syn [22] <= 1'b1;
         exp_syn [23] <= 1'b1;
         exp_syn [24] <= 1'b1;
         exp_syn [25] <= 1'b1;
         exp_syn [26] <= 1'b1;
         exp_syn [27] <= 1'b1;
         exp_syn [28] <= 1'b1;
         exp_syn [29] <= 1'b1;
         exp_syn [30] <= 1'b1;
         exp_syn [31] <= 1'b1;
         exp_syn [32] <= 1'b1;
         exp_syn [33] <= 1'b1;
         exp_syn [34] <= 1'b1;
         exp_syn [35] <= 1'b1;
         exp_syn [36] <= 1'b1;
         exp_syn [37] <= 1'b1;
         exp_syn [38] <= 1'b1;
         exp_syn [39] <= 1'b1;
         exp_syn [40] <= 1'b1;
         exp_syn [41] <= 1'b1;
         exp_syn [42] <= 1'b1;
         exp_syn [43] <= 1'b1;
         exp_syn [44] <= 1'b1;
         exp_syn [45] <= 1'b1;
         exp_syn [46] <= 1'b1;
         exp_syn [47] <= 1'b1;
         exp_syn [48] <= 1'b1;
         exp_syn [49] <= 1'b1;
         exp_syn [50] <= 1'b1;
         exp_syn [51] <= 1'b1;
         exp_syn [52] <= 1'b1;
         exp_syn [53] <= 1'b1;
         exp_syn [54] <= 1'b1;
         exp_syn [55] <= 1'b1;
         exp_syn [56] <= 1'b1;
         exp_syn [57] <= 1'b1;
         exp_syn [58] <= 1'b1;
         exp_syn [59] <= 1'b1;
         exp_syn [60] <= 1'b1;
         exp_syn [61] <= 1'b1;
         exp_syn [62] <= 1'b1;
         exp_syn [63] <= 1'b1;
         exp_syn [64] <= 1'b1;
         exp_syn [65] <= 1'b1;
         exp_syn [66] <= 1'b1;
         exp_syn [67] <= 1'b1;
         exp_syn [68] <= 1'b1;
         exp_syn [69] <= 1'b1;
         exp_syn [70] <= 1'b1;
         exp_syn [71] <= 1'b1;
         exp_syn [72] <= 1'b1;
         exp_syn [73] <= 1'b1;
         exp_syn [74] <= 1'b1;
         exp_syn [75] <= 1'b1;
         exp_syn [76] <= 1'b1;
         exp_syn [77] <= 1'b1;
         exp_syn [78] <= 1'b1;
         exp_syn [79] <= 1'b1;
         exp_syn [80] <= 1'b1;
         exp_syn [81] <= 1'b1;
         exp_syn [82] <= 1'b1;
         exp_syn [83] <= 1'b1;
         exp_syn [84] <= 1'b1;
         exp_syn [85] <= 1'b1;
         exp_syn [86] <= 1'b1;
         exp_syn [87] <= 1'b1;
         exp_syn [88] <= 1'b1;
         exp_syn [89] <= 1'b1;
         exp_syn [90] <= 1'b1;
         exp_syn [91] <= 1'b1;
         exp_syn [92] <= 1'b1;
         exp_syn [93] <= 1'b1;
         exp_syn [94] <= 1'b1;
         exp_syn [95] <= 1'b1;
         exp_syn [96] <= 1'b1;
         exp_syn [97] <= 1'b1;
         exp_syn [98] <= 1'b1;
         exp_syn [99] <= 1'b1;
         exp_syn [100] <= 1'b1;
         exp_syn [101] <= 1'b1;
         exp_syn [102] <= 1'b1;
         exp_syn [103] <= 1'b1;
         exp_syn [104] <= 1'b1;
         exp_syn [105] <= 1'b1;
         exp_syn [106] <= 1'b1;
         exp_syn [107] <= 1'b1;
         exp_syn [108] <= 1'b1;
         exp_syn [109] <= 1'b1;
         exp_syn [110] <= 1'b1;
         exp_syn [111] <= 1'b1;
         exp_syn [112] <= 1'b1;
         exp_syn [113] <= 1'b1;
         exp_syn [114] <= 1'b1;
         exp_syn [115] <= 1'b1;
         exp_syn [116] <= 1'b1;
         exp_syn [117] <= 1'b1;
         exp_syn [118] <= 1'b1;
         exp_syn [119] <= 1'b1;
         exp_syn [120] <= 1'b1;
         exp_syn [121] <= 1'b1;
         exp_syn [122] <= 1'b1;
         exp_syn [123] <= 1'b1;
         exp_syn [124] <= 1'b1;
         exp_syn [125] <= 1'b1;
         exp_syn [126] <= 1'b1;
         exp_syn [127] <= 1'b1;
         exp_syn [128] <= 1'b1;
         exp_syn [129] <= 1'b1;
         exp_syn [130] <= 1'b1;
         exp_syn [131] <= 1'b1;
         exp_syn [132] <= 1'b1;
         exp_syn [133] <= 1'b1;
         exp_syn [134] <= 1'b1;
         exp_syn [135] <= 1'b1;
         exp_syn [136] <= 1'b1;
         exp_syn [137] <= 1'b1;
         exp_syn [138] <= 1'b1;
         exp_syn [139] <= 1'b1;
         exp_syn [140] <= 1'b1;
         exp_syn [141] <= 1'b1;
         exp_syn [142] <= 1'b1;
         exp_syn [143] <= 1'b1;
         exp_syn [144] <= 1'b1;
         exp_syn [145] <= 1'b1;
         exp_syn [146] <= 1'b1;
         exp_syn [147] <= 1'b1;
         exp_syn [148] <= 1'b1;
         exp_syn [149] <= 1'b1;
         exp_syn [150] <= 1'b1;
         exp_syn [151] <= 1'b1;
         exp_syn [152] <= 1'b1;
         exp_syn [153] <= 1'b1;
         exp_syn [154] <= 1'b1;
         exp_syn [155] <= 1'b1;
         exp_syn [156] <= 1'b1;
         exp_syn [157] <= 1'b1;
         exp_syn [158] <= 1'b1;
         exp_syn [159] <= 1'b1;
         exp_syn [160] <= 1'b1;
         exp_syn [161] <= 1'b1;
         exp_syn [162] <= 1'b1;
         exp_syn [163] <= 1'b1;
         exp_syn [164] <= 1'b1;
         exp_syn [165] <= 1'b1;
         exp_syn [166] <= 1'b1;
         exp_syn [167] <= 1'b1;

  end else begin //c_test==0
         y_nr_in = {(NN-MM){1'b0}}; //data init
         y_nr_in[0] = 1; //data //y_nr_in[0] = $urandom_range(0,1); //data
         #10;
         y_nr_in[1] = 0; //data //y_nr_in[1] = $urandom_range(0,1); //data
         #10;
         y_nr_in[2] = 1; //data //y_nr_in[2] = $urandom_range(0,1); //data
         #10;
         y_nr_in[3] = 1; //data //y_nr_in[3] = $urandom_range(0,1); //data
         #10;
         y_nr_in[4] = 1; //data //y_nr_in[4] = $urandom_range(0,1); //data
         #10;
         y_nr_in[5] = 1; //data //y_nr_in[5] = $urandom_range(0,1); //data
         #10;
         y_nr_in[6] = 0; //data //y_nr_in[6] = $urandom_range(0,1); //data
         #10;
         y_nr_in[7] = 0; //data //y_nr_in[7] = $urandom_range(0,1); //data
         #10;
         y_nr_in[8] = 1; //data //y_nr_in[8] = $urandom_range(0,1); //data
         #10;
         y_nr_in[9] = 1; //data //y_nr_in[9] = $urandom_range(0,1); //data
         #10;
         y_nr_in[10] = 0; //data //y_nr_in[10] = $urandom_range(0,1); //data
         #10;
         y_nr_in[11] = 1; //data //y_nr_in[11] = $urandom_range(0,1); //data
         #10;
         y_nr_in[12] = 0; //data //y_nr_in[12] = $urandom_range(0,1); //data
         #10;
         y_nr_in[13] = 1; //data //y_nr_in[13] = $urandom_range(0,1); //data
         #10;
         y_nr_in[14] = 1; //data //y_nr_in[14] = $urandom_range(0,1); //data
         #10;
         y_nr_in[15] = 0; //data //y_nr_in[15] = $urandom_range(0,1); //data
         #10;
         y_nr_in[16] = 0; //data //y_nr_in[16] = $urandom_range(0,1); //data
         #10;
         y_nr_in[17] = 0; //data //y_nr_in[17] = $urandom_range(0,1); //data
         #10;
         y_nr_in[18] = 0; //data //y_nr_in[18] = $urandom_range(0,1); //data
         #10;
         y_nr_in[19] = 0; //data //y_nr_in[19] = $urandom_range(0,1); //data
         #10;
         y_nr_in[20] = 1; //data //y_nr_in[20] = $urandom_range(0,1); //data
         #10;
         y_nr_in[21] = 0; //data //y_nr_in[21] = $urandom_range(0,1); //data
         #10;
         y_nr_in[22] = 1; //data //y_nr_in[22] = $urandom_range(0,1); //data
         #10;
         y_nr_in[23] = 1; //data //y_nr_in[23] = $urandom_range(0,1); //data
         #10;
         y_nr_in[24] = 0; //data //y_nr_in[24] = $urandom_range(0,1); //data
         #10;
         y_nr_in[25] = 0; //data //y_nr_in[25] = $urandom_range(0,1); //data
         #10;
         y_nr_in[26] = 0; //data //y_nr_in[26] = $urandom_range(0,1); //data
         #10;
         y_nr_in[27] = 1; //data //y_nr_in[27] = $urandom_range(0,1); //data
         #10;
         y_nr_in[28] = 1; //data //y_nr_in[28] = $urandom_range(0,1); //data
         #10;
         y_nr_in[29] = 1; //data //y_nr_in[29] = $urandom_range(0,1); //data
         #10;
         y_nr_in[30] = 1; //data //y_nr_in[30] = $urandom_range(0,1); //data
         #10;
         y_nr_in[31] = 0; //data //y_nr_in[31] = $urandom_range(0,1); //data
         #10;
         y_nr_in[32] = 0; //data //y_nr_in[32] = $urandom_range(0,1); //data
         #10;
         y_nr_in[33] = 0; //data //y_nr_in[33] = $urandom_range(0,1); //data
         #10;
         y_nr_in[34] = 1; //data //y_nr_in[34] = $urandom_range(0,1); //data
         #10;
         y_nr_in[35] = 1; //data //y_nr_in[35] = $urandom_range(0,1); //data
         #10;
         y_nr_in[36] = 1; //data //y_nr_in[36] = $urandom_range(0,1); //data
         #10;
         y_nr_in[37] = 0; //data //y_nr_in[37] = $urandom_range(0,1); //data
         #10;
         y_nr_in[38] = 1; //data //y_nr_in[38] = $urandom_range(0,1); //data
         #10;
         y_nr_in[39] = 0; //data //y_nr_in[39] = $urandom_range(0,1); //data
         #10;
     $display("last_bit write encoder %t", $time);

     repeat (1) @ (posedge clk);

     for (int i=0;i<NN-MM;i++) begin
     end

     for (int i=NN-MM;i<NN;i++) begin
     end

     if (~valid_cword_enc)
          $fatal (0,"Please check encoder not a valid code word");
     else
          $info ("is a valid code word");


     num_modified = 8;  // NN * p (0.0384615398943424) + 0.5

       err_cnt = 0;
       y_nr_w_err[0] = 1 ; //error cword
       if (y_nr_w_err[0] != y_nr_enc[0] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 0 );
       end
       y_nr_w_err[1] = 0 ; //error cword
       if (y_nr_w_err[1] != y_nr_enc[1] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 1 );
       end
       y_nr_w_err[2] = 1 ; //error cword
       if (y_nr_w_err[2] != y_nr_enc[2] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 2 );
       end
       y_nr_w_err[3] = 1 ; //error cword
       if (y_nr_w_err[3] != y_nr_enc[3] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 3 );
       end
       y_nr_w_err[4] = 1 ; //error cword
       if (y_nr_w_err[4] != y_nr_enc[4] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 4 );
       end
       y_nr_w_err[5] = 1 ; //error cword
       if (y_nr_w_err[5] != y_nr_enc[5] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 5 );
       end
       y_nr_w_err[6] = 0 ; //error cword
       if (y_nr_w_err[6] != y_nr_enc[6] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 6 );
       end
       y_nr_w_err[7] = 0 ; //error cword
       if (y_nr_w_err[7] != y_nr_enc[7] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 7 );
       end
       y_nr_w_err[8] = 1 ; //error cword
       if (y_nr_w_err[8] != y_nr_enc[8] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 8 );
       end
       y_nr_w_err[9] = 1 ; //error cword
       if (y_nr_w_err[9] != y_nr_enc[9] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 9 );
       end
       y_nr_w_err[10] = 0 ; //error cword
       if (y_nr_w_err[10] != y_nr_enc[10] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 10 );
       end
       y_nr_w_err[11] = 1 ; //error cword
       if (y_nr_w_err[11] != y_nr_enc[11] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 11 );
       end
       y_nr_w_err[12] = 0 ; //error cword
       if (y_nr_w_err[12] != y_nr_enc[12] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 12 );
       end
       y_nr_w_err[13] = 1 ; //error cword
       if (y_nr_w_err[13] != y_nr_enc[13] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 13 );
       end
       y_nr_w_err[14] = 1 ; //error cword
       if (y_nr_w_err[14] != y_nr_enc[14] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 14 );
       end
       y_nr_w_err[15] = 0 ; //error cword
       if (y_nr_w_err[15] != y_nr_enc[15] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 15 );
       end
       y_nr_w_err[16] = 0 ; //error cword
       if (y_nr_w_err[16] != y_nr_enc[16] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 16 );
       end
       y_nr_w_err[17] = 0 ; //error cword
       if (y_nr_w_err[17] != y_nr_enc[17] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 17 );
       end
       y_nr_w_err[18] = 0 ; //error cword
       if (y_nr_w_err[18] != y_nr_enc[18] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 18 );
       end
       y_nr_w_err[19] = 0 ; //error cword
       if (y_nr_w_err[19] != y_nr_enc[19] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 19 );
       end
       y_nr_w_err[20] = 1 ; //error cword
       if (y_nr_w_err[20] != y_nr_enc[20] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 20 );
       end
       y_nr_w_err[21] = 0 ; //error cword
       if (y_nr_w_err[21] != y_nr_enc[21] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 21 );
       end
       y_nr_w_err[22] = 1 ; //error cword
       if (y_nr_w_err[22] != y_nr_enc[22] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 22 );
       end
       y_nr_w_err[23] = 1 ; //error cword
       if (y_nr_w_err[23] != y_nr_enc[23] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 23 );
       end
       y_nr_w_err[24] = 0 ; //error cword
       if (y_nr_w_err[24] != y_nr_enc[24] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 24 );
       end
       y_nr_w_err[25] = 0 ; //error cword
       if (y_nr_w_err[25] != y_nr_enc[25] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 25 );
       end
       y_nr_w_err[26] = 0 ; //error cword
       if (y_nr_w_err[26] != y_nr_enc[26] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 26 );
       end
       y_nr_w_err[27] = 1 ; //error cword
       if (y_nr_w_err[27] != y_nr_enc[27] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 27 );
       end
       y_nr_w_err[28] = 1 ; //error cword
       if (y_nr_w_err[28] != y_nr_enc[28] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 28 );
       end
       y_nr_w_err[29] = 1 ; //error cword
       if (y_nr_w_err[29] != y_nr_enc[29] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 29 );
       end
       y_nr_w_err[30] = 1 ; //error cword
       if (y_nr_w_err[30] != y_nr_enc[30] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 30 );
       end
       y_nr_w_err[31] = 0 ; //error cword
       if (y_nr_w_err[31] != y_nr_enc[31] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 31 );
       end
       y_nr_w_err[32] = 0 ; //error cword
       if (y_nr_w_err[32] != y_nr_enc[32] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 32 );
       end
       y_nr_w_err[33] = 0 ; //error cword
       if (y_nr_w_err[33] != y_nr_enc[33] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 33 );
       end
       y_nr_w_err[34] = 1 ; //error cword
       if (y_nr_w_err[34] != y_nr_enc[34] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 34 );
       end
       y_nr_w_err[35] = 1 ; //error cword
       if (y_nr_w_err[35] != y_nr_enc[35] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 35 );
       end
       y_nr_w_err[36] = 1 ; //error cword
       if (y_nr_w_err[36] != y_nr_enc[36] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 36 );
       end
       y_nr_w_err[37] = 0 ; //error cword
       if (y_nr_w_err[37] != y_nr_enc[37] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 37 );
       end
       y_nr_w_err[38] = 1 ; //error cword
       if (y_nr_w_err[38] != y_nr_enc[38] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 38 );
       end
       y_nr_w_err[39] = 0 ; //error cword
       if (y_nr_w_err[39] != y_nr_enc[39] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 39 );
       end
       y_nr_w_err[40] = 0 ; //error cword
       if (y_nr_w_err[40] != y_nr_enc[40] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 40 );
       end
       y_nr_w_err[41] = 0 ; //error cword
       if (y_nr_w_err[41] != y_nr_enc[41] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 41 );
       end
       y_nr_w_err[42] = 1 ; //error cword
       if (y_nr_w_err[42] != y_nr_enc[42] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 42 );
       end
       y_nr_w_err[43] = 1 ; //error cword
       if (y_nr_w_err[43] != y_nr_enc[43] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 43 );
       end
       y_nr_w_err[44] = 1 ; //error cword
       if (y_nr_w_err[44] != y_nr_enc[44] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 44 );
       end
       y_nr_w_err[45] = 1 ; //error cword
       if (y_nr_w_err[45] != y_nr_enc[45] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 45 );
       end
       y_nr_w_err[46] = 1 ; //error cword
       if (y_nr_w_err[46] != y_nr_enc[46] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 46 );
       end
       y_nr_w_err[47] = 0 ; //error cword
       if (y_nr_w_err[47] != y_nr_enc[47] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 47 );
       end
       y_nr_w_err[48] = 1 ; //error cword
       if (y_nr_w_err[48] != y_nr_enc[48] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 48 );
       end
       y_nr_w_err[49] = 1 ; //error cword
       if (y_nr_w_err[49] != y_nr_enc[49] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 49 );
       end
       y_nr_w_err[50] = 1 ; //error cword
       if (y_nr_w_err[50] != y_nr_enc[50] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 50 );
       end
       y_nr_w_err[51] = 0 ; //error cword
       if (y_nr_w_err[51] != y_nr_enc[51] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 51 );
       end
       y_nr_w_err[52] = 1 ; //error cword
       if (y_nr_w_err[52] != y_nr_enc[52] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 52 );
       end
       y_nr_w_err[53] = 0 ; //error cword
       if (y_nr_w_err[53] != y_nr_enc[53] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 53 );
       end
       y_nr_w_err[54] = 0 ; //error cword
       if (y_nr_w_err[54] != y_nr_enc[54] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 54 );
       end
       y_nr_w_err[55] = 0 ; //error cword
       if (y_nr_w_err[55] != y_nr_enc[55] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 55 );
       end
       y_nr_w_err[56] = 1 ; //error cword
       if (y_nr_w_err[56] != y_nr_enc[56] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 56 );
       end
       y_nr_w_err[57] = 0 ; //error cword
       if (y_nr_w_err[57] != y_nr_enc[57] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 57 );
       end
       y_nr_w_err[58] = 0 ; //error cword
       if (y_nr_w_err[58] != y_nr_enc[58] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 58 );
       end
       y_nr_w_err[59] = 1 ; //error cword
       if (y_nr_w_err[59] != y_nr_enc[59] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 59 );
       end
       y_nr_w_err[60] = 1 ; //error cword
       if (y_nr_w_err[60] != y_nr_enc[60] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 60 );
       end
       y_nr_w_err[61] = 0 ; //error cword
       if (y_nr_w_err[61] != y_nr_enc[61] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 61 );
       end
       y_nr_w_err[62] = 1 ; //error cword
       if (y_nr_w_err[62] != y_nr_enc[62] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 62 );
       end
       y_nr_w_err[63] = 0 ; //error cword
       if (y_nr_w_err[63] != y_nr_enc[63] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 63 );
       end
       y_nr_w_err[64] = 1 ; //error cword
       if (y_nr_w_err[64] != y_nr_enc[64] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 64 );
       end
       y_nr_w_err[65] = 0 ; //error cword
       if (y_nr_w_err[65] != y_nr_enc[65] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 65 );
       end
       y_nr_w_err[66] = 1 ; //error cword
       if (y_nr_w_err[66] != y_nr_enc[66] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 66 );
       end
       y_nr_w_err[67] = 0 ; //error cword
       if (y_nr_w_err[67] != y_nr_enc[67] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 67 );
       end
       y_nr_w_err[68] = 0 ; //error cword
       if (y_nr_w_err[68] != y_nr_enc[68] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 68 );
       end
       y_nr_w_err[69] = 0 ; //error cword
       if (y_nr_w_err[69] != y_nr_enc[69] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 69 );
       end
       y_nr_w_err[70] = 0 ; //error cword
       if (y_nr_w_err[70] != y_nr_enc[70] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 70 );
       end
       y_nr_w_err[71] = 1 ; //error cword
       if (y_nr_w_err[71] != y_nr_enc[71] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 71 );
       end
       y_nr_w_err[72] = 1 ; //error cword
       if (y_nr_w_err[72] != y_nr_enc[72] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 72 );
       end
       y_nr_w_err[73] = 0 ; //error cword
       if (y_nr_w_err[73] != y_nr_enc[73] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 73 );
       end
       y_nr_w_err[74] = 1 ; //error cword
       if (y_nr_w_err[74] != y_nr_enc[74] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 74 );
       end
       y_nr_w_err[75] = 0 ; //error cword
       if (y_nr_w_err[75] != y_nr_enc[75] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 75 );
       end
       y_nr_w_err[76] = 0 ; //error cword
       if (y_nr_w_err[76] != y_nr_enc[76] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 76 );
       end
       y_nr_w_err[77] = 0 ; //error cword
       if (y_nr_w_err[77] != y_nr_enc[77] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 77 );
       end
       y_nr_w_err[78] = 0 ; //error cword
       if (y_nr_w_err[78] != y_nr_enc[78] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 78 );
       end
       y_nr_w_err[79] = 1 ; //error cword
       if (y_nr_w_err[79] != y_nr_enc[79] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 79 );
       end
       y_nr_w_err[80] = 1 ; //error cword
       if (y_nr_w_err[80] != y_nr_enc[80] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 80 );
       end
       y_nr_w_err[81] = 0 ; //error cword
       if (y_nr_w_err[81] != y_nr_enc[81] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 81 );
       end
       y_nr_w_err[82] = 0 ; //error cword
       if (y_nr_w_err[82] != y_nr_enc[82] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 82 );
       end
       y_nr_w_err[83] = 0 ; //error cword
       if (y_nr_w_err[83] != y_nr_enc[83] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 83 );
       end
       y_nr_w_err[84] = 0 ; //error cword
       if (y_nr_w_err[84] != y_nr_enc[84] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 84 );
       end
       y_nr_w_err[85] = 1 ; //error cword
       if (y_nr_w_err[85] != y_nr_enc[85] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 85 );
       end
       y_nr_w_err[86] = 0 ; //error cword
       if (y_nr_w_err[86] != y_nr_enc[86] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 86 );
       end
       y_nr_w_err[87] = 1 ; //error cword
       if (y_nr_w_err[87] != y_nr_enc[87] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 87 );
       end
       y_nr_w_err[88] = 1 ; //error cword
       if (y_nr_w_err[88] != y_nr_enc[88] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 88 );
       end
       y_nr_w_err[89] = 1 ; //error cword
       if (y_nr_w_err[89] != y_nr_enc[89] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 89 );
       end
       y_nr_w_err[90] = 1 ; //error cword
       if (y_nr_w_err[90] != y_nr_enc[90] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 90 );
       end
       y_nr_w_err[91] = 0 ; //error cword
       if (y_nr_w_err[91] != y_nr_enc[91] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 91 );
       end
       y_nr_w_err[92] = 0 ; //error cword
       if (y_nr_w_err[92] != y_nr_enc[92] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 92 );
       end
       y_nr_w_err[93] = 0 ; //error cword
       if (y_nr_w_err[93] != y_nr_enc[93] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 93 );
       end
       y_nr_w_err[94] = 0 ; //error cword
       if (y_nr_w_err[94] != y_nr_enc[94] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 94 );
       end
       y_nr_w_err[95] = 1 ; //error cword
       if (y_nr_w_err[95] != y_nr_enc[95] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 95 );
       end
       y_nr_w_err[96] = 1 ; //error cword
       if (y_nr_w_err[96] != y_nr_enc[96] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 96 );
       end
       y_nr_w_err[97] = 1 ; //error cword
       if (y_nr_w_err[97] != y_nr_enc[97] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 97 );
       end
       y_nr_w_err[98] = 0 ; //error cword
       if (y_nr_w_err[98] != y_nr_enc[98] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 98 );
       end
       y_nr_w_err[99] = 1 ; //error cword
       if (y_nr_w_err[99] != y_nr_enc[99] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 99 );
       end
       y_nr_w_err[100] = 1 ; //error cword
       if (y_nr_w_err[100] != y_nr_enc[100] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 100 );
       end
       y_nr_w_err[101] = 0 ; //error cword
       if (y_nr_w_err[101] != y_nr_enc[101] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 101 );
       end
       y_nr_w_err[102] = 0 ; //error cword
       if (y_nr_w_err[102] != y_nr_enc[102] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 102 );
       end
       y_nr_w_err[103] = 1 ; //error cword
       if (y_nr_w_err[103] != y_nr_enc[103] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 103 );
       end
       y_nr_w_err[104] = 1 ; //error cword
       if (y_nr_w_err[104] != y_nr_enc[104] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 104 );
       end
       y_nr_w_err[105] = 0 ; //error cword
       if (y_nr_w_err[105] != y_nr_enc[105] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 105 );
       end
       y_nr_w_err[106] = 0 ; //error cword
       if (y_nr_w_err[106] != y_nr_enc[106] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 106 );
       end
       y_nr_w_err[107] = 1 ; //error cword
       if (y_nr_w_err[107] != y_nr_enc[107] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 107 );
       end
       y_nr_w_err[108] = 1 ; //error cword
       if (y_nr_w_err[108] != y_nr_enc[108] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 108 );
       end
       y_nr_w_err[109] = 1 ; //error cword
       if (y_nr_w_err[109] != y_nr_enc[109] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 109 );
       end
       y_nr_w_err[110] = 0 ; //error cword
       if (y_nr_w_err[110] != y_nr_enc[110] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 110 );
       end
       y_nr_w_err[111] = 1 ; //error cword
       if (y_nr_w_err[111] != y_nr_enc[111] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 111 );
       end
       y_nr_w_err[112] = 0 ; //error cword
       if (y_nr_w_err[112] != y_nr_enc[112] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 112 );
       end
       y_nr_w_err[113] = 1 ; //error cword
       if (y_nr_w_err[113] != y_nr_enc[113] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 113 );
       end
       y_nr_w_err[114] = 0 ; //error cword
       if (y_nr_w_err[114] != y_nr_enc[114] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 114 );
       end
       y_nr_w_err[115] = 0 ; //error cword
       if (y_nr_w_err[115] != y_nr_enc[115] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 115 );
       end
       y_nr_w_err[116] = 0 ; //error cword
       if (y_nr_w_err[116] != y_nr_enc[116] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 116 );
       end
       y_nr_w_err[117] = 1 ; //error cword
       if (y_nr_w_err[117] != y_nr_enc[117] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 117 );
       end
       y_nr_w_err[118] = 0 ; //error cword
       if (y_nr_w_err[118] != y_nr_enc[118] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 118 );
       end
       y_nr_w_err[119] = 0 ; //error cword
       if (y_nr_w_err[119] != y_nr_enc[119] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 119 );
       end
       y_nr_w_err[120] = 1 ; //error cword
       if (y_nr_w_err[120] != y_nr_enc[120] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 120 );
       end
       y_nr_w_err[121] = 1 ; //error cword
       if (y_nr_w_err[121] != y_nr_enc[121] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 121 );
       end
       y_nr_w_err[122] = 1 ; //error cword
       if (y_nr_w_err[122] != y_nr_enc[122] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 122 );
       end
       y_nr_w_err[123] = 0 ; //error cword
       if (y_nr_w_err[123] != y_nr_enc[123] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 123 );
       end
       y_nr_w_err[124] = 0 ; //error cword
       if (y_nr_w_err[124] != y_nr_enc[124] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 124 );
       end
       y_nr_w_err[125] = 1 ; //error cword
       if (y_nr_w_err[125] != y_nr_enc[125] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 125 );
       end
       y_nr_w_err[126] = 0 ; //error cword
       if (y_nr_w_err[126] != y_nr_enc[126] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 126 );
       end
       y_nr_w_err[127] = 0 ; //error cword
       if (y_nr_w_err[127] != y_nr_enc[127] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 127 );
       end
       y_nr_w_err[128] = 1 ; //error cword
       if (y_nr_w_err[128] != y_nr_enc[128] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 128 );
       end
       y_nr_w_err[129] = 1 ; //error cword
       if (y_nr_w_err[129] != y_nr_enc[129] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 129 );
       end
       y_nr_w_err[130] = 0 ; //error cword
       if (y_nr_w_err[130] != y_nr_enc[130] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 130 );
       end
       y_nr_w_err[131] = 0 ; //error cword
       if (y_nr_w_err[131] != y_nr_enc[131] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 131 );
       end
       y_nr_w_err[132] = 0 ; //error cword
       if (y_nr_w_err[132] != y_nr_enc[132] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 132 );
       end
       y_nr_w_err[133] = 0 ; //error cword
       if (y_nr_w_err[133] != y_nr_enc[133] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 133 );
       end
       y_nr_w_err[134] = 0 ; //error cword
       if (y_nr_w_err[134] != y_nr_enc[134] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 134 );
       end
       y_nr_w_err[135] = 0 ; //error cword
       if (y_nr_w_err[135] != y_nr_enc[135] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 135 );
       end
       y_nr_w_err[136] = 0 ; //error cword
       if (y_nr_w_err[136] != y_nr_enc[136] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 136 );
       end
       y_nr_w_err[137] = 1 ; //error cword
       if (y_nr_w_err[137] != y_nr_enc[137] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 137 );
       end
       y_nr_w_err[138] = 1 ; //error cword
       if (y_nr_w_err[138] != y_nr_enc[138] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 138 );
       end
       y_nr_w_err[139] = 1 ; //error cword
       if (y_nr_w_err[139] != y_nr_enc[139] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 139 );
       end
       y_nr_w_err[140] = 1 ; //error cword
       if (y_nr_w_err[140] != y_nr_enc[140] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 140 );
       end
       y_nr_w_err[141] = 0 ; //error cword
       if (y_nr_w_err[141] != y_nr_enc[141] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 141 );
       end
       y_nr_w_err[142] = 0 ; //error cword
       if (y_nr_w_err[142] != y_nr_enc[142] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 142 );
       end
       y_nr_w_err[143] = 0 ; //error cword
       if (y_nr_w_err[143] != y_nr_enc[143] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 143 );
       end
       y_nr_w_err[144] = 0 ; //error cword
       if (y_nr_w_err[144] != y_nr_enc[144] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 144 );
       end
       y_nr_w_err[145] = 0 ; //error cword
       if (y_nr_w_err[145] != y_nr_enc[145] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 145 );
       end
       y_nr_w_err[146] = 0 ; //error cword
       if (y_nr_w_err[146] != y_nr_enc[146] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 146 );
       end
       y_nr_w_err[147] = 1 ; //error cword
       if (y_nr_w_err[147] != y_nr_enc[147] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 147 );
       end
       y_nr_w_err[148] = 0 ; //error cword
       if (y_nr_w_err[148] != y_nr_enc[148] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 148 );
       end
       y_nr_w_err[149] = 0 ; //error cword
       if (y_nr_w_err[149] != y_nr_enc[149] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 149 );
       end
       y_nr_w_err[150] = 1 ; //error cword
       if (y_nr_w_err[150] != y_nr_enc[150] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 150 );
       end
       y_nr_w_err[151] = 1 ; //error cword
       if (y_nr_w_err[151] != y_nr_enc[151] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 151 );
       end
       y_nr_w_err[152] = 0 ; //error cword
       if (y_nr_w_err[152] != y_nr_enc[152] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 152 );
       end
       y_nr_w_err[153] = 1 ; //error cword
       if (y_nr_w_err[153] != y_nr_enc[153] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 153 );
       end
       y_nr_w_err[154] = 0 ; //error cword
       if (y_nr_w_err[154] != y_nr_enc[154] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 154 );
       end
       y_nr_w_err[155] = 1 ; //error cword
       if (y_nr_w_err[155] != y_nr_enc[155] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 155 );
       end
       y_nr_w_err[156] = 1 ; //error cword
       if (y_nr_w_err[156] != y_nr_enc[156] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 156 );
       end
       y_nr_w_err[157] = 1 ; //error cword
       if (y_nr_w_err[157] != y_nr_enc[157] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 157 );
       end
       y_nr_w_err[158] = 1 ; //error cword
       if (y_nr_w_err[158] != y_nr_enc[158] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 158 );
       end
       y_nr_w_err[159] = 0 ; //error cword
       if (y_nr_w_err[159] != y_nr_enc[159] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 159 );
       end
       y_nr_w_err[160] = 0 ; //error cword
       if (y_nr_w_err[160] != y_nr_enc[160] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 160 );
       end
       y_nr_w_err[161] = 0 ; //error cword
       if (y_nr_w_err[161] != y_nr_enc[161] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 161 );
       end
       y_nr_w_err[162] = 1 ; //error cword
       if (y_nr_w_err[162] != y_nr_enc[162] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 162 );
       end
       y_nr_w_err[163] = 0 ; //error cword
       if (y_nr_w_err[163] != y_nr_enc[163] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 163 );
       end
       y_nr_w_err[164] = 1 ; //error cword
       if (y_nr_w_err[164] != y_nr_enc[164] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 164 );
       end
       y_nr_w_err[165] = 0 ; //error cword
       if (y_nr_w_err[165] != y_nr_enc[165] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 165 );
       end
       y_nr_w_err[166] = 1 ; //error cword
       if (y_nr_w_err[166] != y_nr_enc[166] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 166 );
       end
       y_nr_w_err[167] = 0 ; //error cword
       if (y_nr_w_err[167] != y_nr_enc[167] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 167 );
       end
       y_nr_w_err[168] = 1 ; //error cword
       if (y_nr_w_err[168] != y_nr_enc[168] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 168 );
       end
       y_nr_w_err[169] = 1 ; //error cword
       if (y_nr_w_err[169] != y_nr_enc[169] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 169 );
       end
       y_nr_w_err[170] = 1 ; //error cword
       if (y_nr_w_err[170] != y_nr_enc[170] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 170 );
       end
       y_nr_w_err[171] = 0 ; //error cword
       if (y_nr_w_err[171] != y_nr_enc[171] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 171 );
       end
       y_nr_w_err[172] = 1 ; //error cword
       if (y_nr_w_err[172] != y_nr_enc[172] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 172 );
       end
       y_nr_w_err[173] = 0 ; //error cword
       if (y_nr_w_err[173] != y_nr_enc[173] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 173 );
       end
       y_nr_w_err[174] = 1 ; //error cword
       if (y_nr_w_err[174] != y_nr_enc[174] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 174 );
       end
       y_nr_w_err[175] = 0 ; //error cword
       if (y_nr_w_err[175] != y_nr_enc[175] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 175 );
       end
       y_nr_w_err[176] = 1 ; //error cword
       if (y_nr_w_err[176] != y_nr_enc[176] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 176 );
       end
       y_nr_w_err[177] = 1 ; //error cword
       if (y_nr_w_err[177] != y_nr_enc[177] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 177 );
       end
       y_nr_w_err[178] = 0 ; //error cword
       if (y_nr_w_err[178] != y_nr_enc[178] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 178 );
       end
       y_nr_w_err[179] = 0 ; //error cword
       if (y_nr_w_err[179] != y_nr_enc[179] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 179 );
       end
       y_nr_w_err[180] = 0 ; //error cword
       if (y_nr_w_err[180] != y_nr_enc[180] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 180 );
       end
       y_nr_w_err[181] = 1 ; //error cword
       if (y_nr_w_err[181] != y_nr_enc[181] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 181 );
       end
       y_nr_w_err[182] = 0 ; //error cword
       if (y_nr_w_err[182] != y_nr_enc[182] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 182 );
       end
       y_nr_w_err[183] = 1 ; //error cword
       if (y_nr_w_err[183] != y_nr_enc[183] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 183 );
       end
       y_nr_w_err[184] = 0 ; //error cword
       if (y_nr_w_err[184] != y_nr_enc[184] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 184 );
       end
       y_nr_w_err[185] = 1 ; //error cword
       if (y_nr_w_err[185] != y_nr_enc[185] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 185 );
       end
       y_nr_w_err[186] = 1 ; //error cword
       if (y_nr_w_err[186] != y_nr_enc[186] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 186 );
       end
       y_nr_w_err[187] = 1 ; //error cword
       if (y_nr_w_err[187] != y_nr_enc[187] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 187 );
       end
       y_nr_w_err[188] = 1 ; //error cword
       if (y_nr_w_err[188] != y_nr_enc[188] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 188 );
       end
       y_nr_w_err[189] = 1 ; //error cword
       if (y_nr_w_err[189] != y_nr_enc[189] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 189 );
       end
       y_nr_w_err[190] = 1 ; //error cword
       if (y_nr_w_err[190] != y_nr_enc[190] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 190 );
       end
       y_nr_w_err[191] = 1 ; //error cword
       if (y_nr_w_err[191] != y_nr_enc[191] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 191 );
       end
       y_nr_w_err[192] = 0 ; //error cword
       if (y_nr_w_err[192] != y_nr_enc[192] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 192 );
       end
       y_nr_w_err[193] = 0 ; //error cword
       if (y_nr_w_err[193] != y_nr_enc[193] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 193 );
       end
       y_nr_w_err[194] = 1 ; //error cword
       if (y_nr_w_err[194] != y_nr_enc[194] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 194 );
       end
       y_nr_w_err[195] = 1 ; //error cword
       if (y_nr_w_err[195] != y_nr_enc[195] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 195 );
       end
       y_nr_w_err[196] = 1 ; //error cword
       if (y_nr_w_err[196] != y_nr_enc[196] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 196 );
       end
       y_nr_w_err[197] = 0 ; //error cword
       if (y_nr_w_err[197] != y_nr_enc[197] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 197 );
       end
       y_nr_w_err[198] = 0 ; //error cword
       if (y_nr_w_err[198] != y_nr_enc[198] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 198 );
       end
       y_nr_w_err[199] = 0 ; //error cword
       if (y_nr_w_err[199] != y_nr_enc[199] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 199 );
       end
       y_nr_w_err[200] = 1 ; //error cword
       if (y_nr_w_err[200] != y_nr_enc[200] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 200 );
       end
       y_nr_w_err[201] = 0 ; //error cword
       if (y_nr_w_err[201] != y_nr_enc[201] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 201 );
       end
       y_nr_w_err[202] = 0 ; //error cword
       if (y_nr_w_err[202] != y_nr_enc[202] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 202 );
       end
       y_nr_w_err[203] = 0 ; //error cword
       if (y_nr_w_err[203] != y_nr_enc[203] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 203 );
       end
       y_nr_w_err[204] = 0 ; //error cword
       if (y_nr_w_err[204] != y_nr_enc[204] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 204 );
       end
       y_nr_w_err[205] = 1 ; //error cword
       if (y_nr_w_err[205] != y_nr_enc[205] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 205 );
       end
       y_nr_w_err[206] = 0 ; //error cword
       if (y_nr_w_err[206] != y_nr_enc[206] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 206 );
       end
       y_nr_w_err[207] = 1 ; //error cword
       if (y_nr_w_err[207] != y_nr_enc[207] ) begin
           err_cnt ++;
           $display ("err_cnt : %0d at[%0d]", err_cnt, 207 );
       end
     $display ("error cnt %0d  num_modified %0d", err_cnt , num_modified);

     for (int i=0;i<NN;i++) begin
            if (y_nr_w_err[i]) begin
                 q0_0  [i] <= 1'b1;  // BPSK 1: -1 === 2'b11
                 q0_1  [i] <= 1'b1;  // BPSK 1: -1 === 2'b11
                                    // value of 1 means -1 in BPSK which is 2'b11
            end else begin
                 q0_0  [i] <= 1'b1;  // BPSK 0: 1  === 2'b01
                 q0_1  [i] <= 1'b0;  // BPSK 0: 1  === 2'b01
                                    // value of 0 means 1 in BPSK which is 2'b01
            end
     end

     for (int i=0;i<MM;i++) begin
         exp_syn [i] <= 1'b0;
     end

  end




  //repeat (4) @ (posedge clk);
  //start                          <= 1'b1;
  //repeat (1) @ (posedge clk);
  //start                          <= 1'b0;
  repeat (1) @ (posedge clk);
  if (valid_cword_enc) begin
       $display("LDPC_Encoder_TB: PASSED %t", $time);
  end else begin
       $display("LDPC_Encoder_TB: FAILED %t", $time);
  end
  repeat (num_pkts*160000) @(posedge clk);
  $display("LDPC_TB:finsh called timeout :%0d %t", timeoutfec, $time);
  repeat (timeoutfec) @(posedge clk);
  $finish();
end


assign percent_probability_real = 0.0384615398943424;
// ln((1-p)/p)*(2**11) + 0,5
assign percent_probability_int = 32'd 206;

initial
begin
`ifdef IVERILOG
          $dumpfile("sntc_ldpc_encoder_tb.vcd");
          $dumpvars(0, sntc_ldpc_encoder_tb);
`endif

  repeat (600) @(posedge clk);
end


`endif




`ifdef ENCRYPT
`endif

endmodule

//C DBG: bsc p:0.100000 probability:2.197225 percent_probability_int:'d141

 //GF Syndrome valid code word
//y_int:
 //a11cfea357547ac81e032722b99b87a1858559177c5c78d06b3d
//syny_err:
 //0200400200100008100880c0000680200320002200
//C DBG: bsc p:0.038462 probability:3.218876 percent_probability_int:'d206
